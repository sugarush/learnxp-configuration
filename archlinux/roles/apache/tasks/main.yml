---

  - name: create apache packages directory
    file:
      state: directory
      path: /tmp/apache

  - name: copy apache packages
    aws_s3:
      bucket: "{{ bucket }}"
      object: "{{ item.value }}"
      dest: "/tmp/apache/{{ item.key }}.pkg.tar.xz"
      mode: get
    with_dict: "{{ packages }}"

  - name: install apache packages
    shell: pacman --noconfirm -U /tmp/apache/*

  - name: set server name
    lineinfile:
      path: /etc/httpd/conf/httpd.conf
      regexp: "ServerName .*:80$"
      line: "ServerName {{ lookup('env', 'HOST_IP') }}:80"
    notify:
      - reload apache

  - name: add server status handler to apache configuration
    blockinfile:
      path: /etc/httpd/conf/httpd.conf
      marker: "# Server Status"
      block: >
        <Location "/server-status">
          SetHandler server-status
          Order Deny,Allow
          Deny from all
          Allow from {{ lookup('env', 'HOST_IP') }}
        </Location>
    notify:
      - reload apache

  - name: add mpm_prefork_module settings
    blockinfile:
      path: /etc/httpd/conf/httpd.conf
      marker: "# mpm_prefork_module settings"
      block: >
        <IfModule mpm_prefork_module>
          StartServers 1
          MinSpareServers 20
          MaxSpareServers 60
          MaxRequestWorkers 200
          MaxConnectionsPerChild 4500
        </IfModule>
    notify:
      - reload apache

  - name: create systemd drop-in directory
    file:
      state: directory
      path: /etc/systemd/system/httpd.service.d

  - name: place restart on failure drop-in
    copy:
      src: restart-on-failure.conf
      dest: /etc/systemd/system/httpd.service.d/restart-on-failure.conf
    notify:
      - daemon-reload

  - name: enable and start apache
    service:
      name: httpd
      state: started
      enabled: yes

  - name: template apache telegraf configuration
    template:
      src: apache.telegraf.conf
      dest: /etc/telegraf/telegraf.d/apache.telegraf.conf
    notify:
      - reload influxdb-telegraf
