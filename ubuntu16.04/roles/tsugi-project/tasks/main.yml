---

  - name: install mailutils
    apt:
      name: mailutils

  - name: create destination directory
    file:
      path: "{{ directory }}"
      state: directory

  - name: clone tsugi project
    git:
      repo: "{{ repository }}"
      dest: "{{ directory }}"

  - name: template tsugi configuration template
    template:
      src: tsugi-config.php
      dest: /etc/consul-template/template/tsugi-config.php
      variable_start_string: '<<'
      variable_end_string: '>>'
      block_start_string: '<%'
      block_end_string: '%>'
    notify:
      - reload consul-template@tsugi-config

  - name: template tsugi-config consul-template configuration
    template:
      src: tsugi-config.toml
      dest: /etc/consul-template/config/tsugi-config.toml
    notify:
      - reload consul-template@tsugi-config

  - name: enable tsugi configuration consul-template
    systemd:
      name: consul-template@tsugi-config
      state: started
      enabled: yes

  - name: get tsugi_mail_domain from consul
    consul_kv:
      key: tsugi/{{ lookup('env', 'ROLE') }}/tsugi_mail_domain
    register: tsugi_mail_domain

  - name: setup postfix mailname
    shell: echo "postfix postfix/mailname string {{ tsugi_mail_domain['data']['Value'] }}" | debconf-set-selections

  - name: setup postfix main_mailer_type
    shell: echo "postfix postfix/main_mailer_type string 'Internet Site'" | debconf-set-selections

  - name: get postfix_origin_domain from consul
    consul_kv:
      key: tsugi/{{ lookup('env', 'ROLE') }}/postfix_origin_domain
    register: postfix_origin_domain

  - name: get postfix_relayhost from consul
    consul_kv:
      key: tsugi/{{ lookup('env', 'ROLE') }}/postfix_relayhost
    register: postfix_relayhost

  - name: template postfix configuration
    template:
      src: main.cf
      dest: /etc/postfix/main.cf

  - name: get postfix_sasl_password from consul
    consul_kv:
      key: tsugi/{{ lookup('env', 'ROLE') }}/postfix_sasl_password
    register: postfix_sasl_password

  - name: write sasl_passwd file
    shell: >
      echo "{{ postfix_sasl_password['data']['Value'] }}" > /etc/postfix/sasl_passwd;
      postmap hash:/etc/postfix/sasl_passwd

  - name: reload postfix
    systemd:
      name: postfix
      state: reloaded

  - name: create efs directory
    file:
      state: directory
      path: /efs

  - name: mount efs partition
    mount:
      src: "{{ efs[lookup('env', 'ENVIRONMENT')] }}:/"
      path: /efs
      opts: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
      fstype: nfs4
      state: mounted

  - name: set efs owner and group
    file:
      state: directory
      path: /efs
      owner: www-data
      group: www-data
      recurse: yes

  - name: copy git to gitx
    copy:
      src: /usr/bin/git
      dest: /usr/local/bin/gitx
      mode: a+s
      owner: www-data
      group: www-data

  - name: initialize tsugi database
    shell: >
      cd "{{ directory }}/admin";
      php upgrade.php

  - name: update tsugi tools
    shell: >
      cd "{{ directory }}/admin/install";
      php update.php

  - name: copy tsugi-errors-check script
    copy:
      src: scripts/tsugi-errors-check.sh
      dest: /usr/local/bin/tsugi-errors-check.sh

  - name: copy tsugi-errors-check systemd service definition
    copy:
      src: services/tsugi-errors-check.service
      dest: /etc/systemd/system/tsugi-errors-check.service

  - name: copy tsugi-errors-check systemd timer definition
      src: timers/tsugi-errors-check.timer
      dest: /etc/systemd/system/tsugi-errors-check.timer

  - name: start and enable tsugi-errors-check systemd timer
    systemd:
      name: tsugi-errors-check.timer
      state: started
      enabled: yes
      daemon_reload: yes

  - name: template tusgi-consul-vault-check.py
    template:
      src: tsugi-consul-vault-check.py
      dest: /usr/local/bin/tsugi-consul-vault-check.py
      mode: 0755

  - name: copy tsugi-config consul check definition
    copy:
      src: tsugi-config.check.json
      dest: /etc/consul/check/tsugi-config.check.json
    notify:
      - reload consul@client
